openapi: 3.0.1
info:
  title: Product Service API
  description: API documentation for Product Service API.
  version: 1.0.0

servers:
  - url: https://kaplfyoyic.execute-api.eu-central-1.amazonaws.com/prod
    description: API Gateway

paths:
  /products:
    get:
      summary: Get all products
      description: Retrieves a list of products from the AWS Lambda function.
      responses:
        "200":
          description: Successfully retrieved products
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "1"
                    name:
                      type: string
                      example: "Product 1"
                    price:
                      type: number
                      example: "100"
                    description:
                      type: string
                      example: "Product 1 description"
  /products/{productId}:
    get:
      summary: Get product by ID
      description: Retrieves a product by ID from the AWS Lambda function.
      parameters:
        - name: productId
          in: path
          required: true
          description: productId
          schema:
            type: string
            example: "1"
      responses:
        "200":
          description: Successfully retrieved product
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "1"
                  name:
                    type: string
                    example: "Product 1"
                  price:
                    type: number
                    example: "100"
                  description:
                    type: string
                    example: "Product 1 description"
        "400":
          description: Product ID is required
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product ID is required"
        "404":
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product not found"
    post:
      tags:
        - Products
      summary: Create a new product
      description: Creates a new product in the database
      operationId: createProduct
      parameters:
        -   name: productId
            in: path
            required: true
            description: productId
            schema:
              type: string
              example: "1"
      requestBody:
        description: Product object that needs to be added to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          example: "1"
          description: The product unique identifier
        title:
          type: string
          example: "Product Name"
          description: The name of the product
        price:
          type: number
          format: float
          example: 99.99
          description: The price of the product
        description:
          type: string
          example: "Product description"
          description: Detailed description of the product
        count:
          type: integer
          example: 10
          description: Available quantity of the product
      required:
        - id
        - title
        - price

    ProductRequest:
      type: object
      properties:
        title:
          type: string
          example: "Product Name"
          description: The name of the product
        description:
          type: string
          example: "Product description"
          description: Detailed description of the product
        price:
          type: number
          format: float
          example: 99.99
          description: The price of the product
        count:
          type: integer
          example: 10
          description: Initial quantity of the product
      required:
        - title
        - description
        - price
        - count

    Error:
      type: object
      properties:
        message:
          type: string
          example: "Error message"
          description: Error description
        error:
          type: string
          example: "Detailed error information"
          description: Additional error details

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
